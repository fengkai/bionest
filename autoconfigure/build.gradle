plugins{
	id "java"
}

//sourceSets {
//	main {
//		java {
//			srcDirs = ['src/java']
//		}
//		resources {
//			srcDirs = ['src/resources']
//		}
//	}
//}
description "Bionest Autoconfigure"


dependencies{
	compileOnly("org.springframework.boot:spring-boot-autoconfigure")
	compileOnly("org.springframework.data:spring-data-jpa")
	compileOnly("org.springframework:spring-web")
	compileOnly("org.springframework:spring-webmvc")
	compileOnly("org.springframework.security:spring-security-config")
	compileOnly("org.springframework.security:spring-security-web")
	compileOnly("org.springframework.security:spring-security-oauth2-jose")
	compileOnly("org.springframework.security:spring-security-oauth2-resource-server")
	compileOnly("org.springframework.boot:spring-boot-starter-web")
	implementation("org.apache.commons:commons-lang3:3.12.0")
	implementation("com.google.code.gson:gson")
	implementation(project(":boot"))
	implementation("org.mapstruct:mapstruct:1.4.2.Final")
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	implementation("mysql:mysql-connector-java")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.boot:spring-boot-starter-data-jpa")
	testImplementation("org.springframework.boot:spring-boot-starter-web")
	testImplementation("org.springframework.boot:spring-boot-starter-security")
	testImplementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
//	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("com.squareup.okhttp3:mockwebserver")
}

test {
	useJUnitPlatform()
}


